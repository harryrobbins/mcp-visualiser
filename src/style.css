/* src/style.css */

/* Import Tailwind base styles */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Import JSON viewer styles (if needed - depends on the library) */
/* Example for react-json-view, often it injects styles */

/* Global application styles */
body {
  @apply font-sans m-0 h-screen w-screen overflow-hidden;
}

.app-container {
  @apply flex h-screen w-screen font-sans;
}

.flow-container {
  @apply flex-grow h-full border-r border-gray-300 relative;
  /* width: 100%; (flex-grow handles this) */
}

.sidebar {
  @apply w-[350px] p-4 box-border overflow-y-auto h-full bg-gray-100 flex flex-col;
}

.sidebar h2, .sidebar h3 {
  @apply mt-0;
}

.sidebar button {
  @apply py-2 px-4 text-base mb-4 cursor-pointer bg-blue-500 text-white rounded hover:bg-blue-600;
}

.step-info {
  @apply bg-gray-200 p-2 rounded mb-4;
}

.mcp-display {
  @apply flex-grow overflow-auto bg-white border border-gray-200 p-1 text-sm;
  /* Ensure react-json-view container takes space */
  & > div { /* Target the container div of react-json-view */
      height: 100%;
  }
}

/* --- React Flow Custom Styles --- */

/* Default Node Styles */
.react-flow__node {
  @apply border border-gray-500 py-2 px-4 rounded bg-white min-w-[150px] text-center;
  /* position, display, visibility are handled by React Flow */
}

/* Highlighted Node Style */
.react-flow__node.highlight {
  @apply bg-blue-200 border-blue-500;
}

/* Default Edge Style */
.react-flow__edge .react-flow__edge-path {
  @apply stroke-gray-400;
  stroke-width: 2;
  /* fill, stroke-linecap, stroke-linejoin, pointer-events, visibility are handled by React Flow */
}

/* Highlighted Edge Style */
.react-flow__edge.highlight .react-flow__edge-path {
  @apply stroke-blue-500;
  stroke-width: 3;
}

/* Animated edges get styled by React Flow, but you can add overrides */
/* .react-flow__edge.animated .react-flow__edge-path { */
  /* stroke-dasharray: 5, 5; */
/* } */


/* src/style.css */

/* Import Tailwind base styles */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Import JSON viewer styles (if needed - depends on the library) */

/* Global application styles */
body {
  @apply font-sans m-0 h-screen w-screen overflow-hidden;
}

.app-container {
  @apply flex h-screen w-screen font-sans;
}

.flow-container {
  @apply flex-grow h-full border-r border-gray-300 relative bg-gray-50; /* Added bg */
}

.sidebar {
  @apply w-[400px] p-4 box-border overflow-y-auto h-full bg-gray-100 flex flex-col; /* Wider sidebar */
}

.sidebar h2, .sidebar h3 {
  @apply mt-0 mb-2 font-semibold;
}
.sidebar h3 {
    @apply text-lg mt-4; /* Spacing for sections */
}

.sidebar .controls {
    @apply flex gap-2 mb-4; /* Spacing for buttons */
}

.sidebar button {
  @apply py-1 px-3 text-sm cursor-pointer bg-blue-500 text-white rounded hover:bg-blue-600 disabled:bg-gray-400 disabled:cursor-not-allowed;
}

.step-info {
  @apply bg-gray-200 p-3 rounded mb-4 text-sm;
}
.step-info strong {
    @apply font-bold;
}

.mcp-display {
  @apply flex-grow overflow-auto bg-white border border-gray-200 p-2 text-xs rounded; /* Smaller text */
  min-height: 200px; /* Ensure it has some height */
}
/* Target the container div of json-viewer if needed */
.mcp-display > div {
    height: 100%;
}

.memory-display {
    @apply bg-yellow-100 border border-yellow-300 p-3 rounded mb-4 text-sm;
}
.memory-display h3 {
    @apply mt-0 font-bold text-base;
}
.memory-display p {
    @apply mb-1 italic text-gray-700;
}
.memory-display button {
     @apply py-1 px-2 text-xs mt-2 bg-gray-500 hover:bg-gray-600;
}
.memory-display .mcp-display { /* Reuse mcp-display styles for nested viewer */
     @apply text-xs p-1 mt-1;
     max-height: 150px; /* Limit height of memory viewer */
}


/* --- React Flow Custom Styles --- */

/* Remove default node styles if using custom components with Tailwind */
/* .react-flow__node { ... } */

/* Highlight Style (Applied via className in App.jsx/CustomNodes.jsx) */
.react-flow__node.highlight {
  @apply ring-2 ring-offset-1 ring-blue-500 shadow-lg; /* Use ring for highlight */
}

/* Specific style for tool node (can be done in CustomNodes.jsx with Tailwind too) */
.react-flow__node.tool-node {
   @apply border-purple-400 bg-purple-100;
}
.react-flow__node.tool-node.highlight {
    @apply ring-purple-600 bg-purple-200; /* Different highlight for tool */
}


/* Default Edge Style */
.react-flow__edge .react-flow__edge-path {
  @apply stroke-gray-400;
  stroke-width: 1.5; /* Slightly thinner */
}

/* Highlighted Edge Style (Applied via className in App.jsx) */
.react-flow__edge.highlight .react-flow__edge-path {
  @apply stroke-blue-600;
  stroke-width: 2.5; /* Thicker highlight */
}

/* Style for animated edges */
.react-flow__edge.animated .react-flow__edge-path {
   stroke-dasharray: 5, 5;
   animation: dashdraw .5s linear infinite;
}

/* Make sure controls and minimap look okay */
.react-flow__controls {
    @apply shadow-md;
}
.react-flow__minimap {
    @apply bg-gray-100 border border-gray-300 shadow-md;
}

/* src/style.css */

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Global & Sidebar Styles (mostly same as before) */
body { @apply font-sans m-0 h-screen w-screen overflow-hidden; }
.app-container { @apply flex h-screen w-screen font-sans; }
.flow-container { @apply flex-grow h-full border-r border-gray-300 relative bg-gray-50; }
.sidebar { @apply w-[450px] p-4 box-border overflow-y-auto h-full bg-gray-100 flex flex-col; } /* Slightly wider */
.sidebar h2 { @apply mt-0 mb-2 text-xl font-semibold; }
.sidebar h3 { @apply text-lg mt-3 mb-1 font-semibold; }
.sidebar .controls { @apply flex gap-2 mb-4; }
.sidebar button { @apply py-1 px-3 text-sm cursor-pointer bg-blue-500 text-white rounded hover:bg-blue-600 disabled:bg-gray-400 disabled:cursor-not-allowed; }
.sidebar hr { @apply my-4 border-gray-300; } /* Spacing for separators */
.step-info { @apply bg-gray-200 p-3 rounded mb-4 text-sm; }
.step-info strong { @apply font-bold; }

/* Base JsonViewer style */
.json-viewer { @apply text-xs p-1 mt-1 max-h-[180px] overflow-auto bg-white border border-gray-300 rounded; }

/* Action Details Panel */
.action-details-display {
    @apply bg-green-50 border border-green-300 p-3 rounded mb-4 text-sm;
}
.action-details-display h3 { @apply mt-0 font-bold text-base text-green-800; }
.action-details-display .change-desc { @apply mb-2 italic text-green-700 text-xs; }
.action-details-display .change-desc strong { @apply font-semibold text-green-800 not-italic; }
.action-details-display .action-data-split { @apply flex gap-3 justify-between; }
.action-details-display .action-data-before,
.action-details-display .action-data-after { @apply w-1/2; }
.action-details-display h4 { @apply text-sm font-semibold mb-1 text-gray-600; }
.action-details-display .json-viewer { @apply border-green-200; } /* Border color for nested viewer */

/* Transport Data Panel (Pink) */
.transport-data-display {
    @apply bg-pink-50 border border-pink-300 p-3 rounded mb-4 text-sm;
}
.transport-data-display h3 { @apply mt-0 font-bold text-base text-pink-800; }
.transport-data-display p { @apply mb-1 text-pink-700 text-xs; }
.transport-data-display p strong { @apply font-semibold text-pink-800 not-italic;}
.transport-data-display .json-viewer { @apply border-pink-200; }

/* Node Memory Panel (Yellow - On Click) */
.memory-display {
    @apply bg-yellow-50 border border-yellow-300 p-3 rounded mb-4 text-sm;
}
.memory-display h3 { @apply mt-0 font-bold text-base text-yellow-800; }
.memory-display p { @apply mb-1 text-yellow-700 text-xs; }
.memory-display p strong { @apply font-semibold text-yellow-800 not-italic;}
.memory-display button { @apply py-1 px-2 text-xs mt-2 bg-gray-500 hover:bg-gray-600; }
.memory-display .json-viewer { @apply border-yellow-200; }


/* --- React Flow Custom Styles --- */

/* Highlight for the MAIN node performing an ACTION (e.g., Green Ring) */
.react-flow__node.action-highlight {
  @apply ring-2 ring-offset-1 ring-green-500 shadow-lg;
}

/* Highlight for nodes INVOLVED in TRANSPORT (e.g., Blue Ring - subtle) */
.react-flow__node.transport-involved-highlight {
   @apply ring-2 ring-offset-1 ring-blue-400 shadow-md;
}

/* Generic highlight (if needed for other cases, less prominent) */
.react-flow__node.highlight {
   @apply ring-1 ring-gray-400;
}

/* Specific style for tool node */
.react-flow__node.tool-node { @apply border-purple-400 bg-purple-100; }
/* Tool node highlights override base highlights */
.react-flow__node.tool-node.action-highlight { @apply ring-green-500 bg-purple-200; }
.react-flow__node.tool-node.transport-involved-highlight { @apply ring-blue-400 bg-purple-200; }


/* Default Edge Style */
.react-flow__edge .react-flow__edge-path {
  @apply stroke-gray-400 transition-all duration-300;
  stroke-width: 1.5;
}

/* Transport Edge Highlight (PINK) */
.react-flow__edge.transport-edge-highlight .react-flow__edge-path {
  @apply stroke-pink-500;
  stroke-width: 2.5; /* Slightly thicker */
}

/* Animation for Transport Edge */
.react-flow__edge.transport-edge-highlight.animated .react-flow__edge-path {
   stroke-dasharray: 6, 6;
   animation: dashdraw .4s linear infinite;
}

@keyframes dashdraw { to { stroke-dashoffset: -12; } }


.react-flow__controls { @apply shadow-md; }
.react-flow__minimap { @apply bg-gray-100 border border-gray-300 shadow-md; }